1. Цель проекта

Создать настольную игру «Шашки» с графическим интерфейсом на библиотеке PyQt6, реализующую базовые и продвинутые правила русских шашек, включая:

движение обычных и дамочных шашек,

обязательные взятия,

множественные взятия одной шашкой,

превращение в дамку,

определение победителя,

перезапуск игры после завершения партии.

2. Основные требования
2.1. Интерфейс

Используется библиотека PyQt6.

Главное окно (QWidget) фиксированного размера — 640×640 пикселей.

Игровое поле состоит из 8×8 клеток, по 80 пикселей каждая.

Цвета доски:

светлые клетки — #F0D9B5

тёмные клетки — #B58863

В верхней части отображается текущий ход:

"Ход: Чёрные" / "Ход: Белые".

После окончания партии отображается диалог QMessageBox с сообщением о победителе и перезапуском игры.

3. Игровая логика
3.1. Начальная позиция

Чёрные шашки располагаются в верхних трёх рядах (рядах 0–2) на тёмных клетках.

Белые шашки — в нижних трёх рядах (рядах 5–7).

Каждая шашка хранится как словарь:

{
    "color": "black" | "white",
    "pos": QPointF(col, row),
    "king": bool
}

3.2. Ходы

Игроки ходят по очереди, начиная чёрными.

Выбор шашки осуществляется щелчком мыши по ней.

Перемещение реализовано drag & drop — перетаскиванием мышью.

После отпускания кнопки проверяется корректность хода:

ход возможен только на диагональ,

нельзя ходить на занятое поле,

нельзя ходить за границы доски.

3.3. Правила движения

Обычная шашка:

Ход на 1 клетку по диагонали вперёд.

Взятие — прыжок через вражескую шашку на свободную клетку (через 2 клетки).

Дамка:

Ходит на любое расстояние по диагонали.

Может бить в любом направлении.

При взятии должна перескакивать ровно через одну шашку противника, за которой есть пустая клетка.

После взятия шашка противника удаляется с доски.

3.4. Превращение в дамку

Если обычная шашка достигает противоположного края (для чёрных — ряд 7, для белых — ряд 0), она становится дамкой.

Дамка визуально выделяется жёлтой окантовкой.

3.5. Множественные взятия

После взятия проверяется возможность нового захвата той же шашкой.

Если возможно — ход продолжается тем же игроком.

Если нет — ход передаётся противнику.

3.6. Определение победителя

Игра завершается, если у одного цвета не осталось шашек.

После этого появляется окно с сообщением:
"Победили Белые шашки!" или "Победили Чёрные шашки!"

После нажатия на «ОК» игра перезапускается.

4. Визуальное отображение
4.1. Отрисовка

Используется QPainter:

Каждая клетка рисуется квадратом (drawRect).

Шашки рисуются кругами (drawEllipse):

Белая — цвет "white".

Чёрная — цвет "black".

Подсветка выбранной шашки — красное кольцо.

Для дамки — дополнительная золотая окантовка.

Для выбранной дамки — красная внешняя и золотая внутренняя рамка.

5. Структура кода
Основной класс

Checkers(QWidget) — содержит всю игровую логику и интерфейс.

Основные методы:
Метод	Назначение
init_checkers()	Инициализация шашек в начальной позиции
paintEvent(event)	Отрисовка доски и шашек
mousePressEvent(event)	Выбор шашки
mouseMoveEvent(event)	Перетаскивание
mouseReleaseEvent(event)	Проверка и выполнение хода
is_valid_move(...)	Проверка допустимости хода
try_capture(...)	Обработка взятия
promote_to_king(...)	Превращение в дамку
can_continue_capture(...)	Проверка множественного взятия
switch_turn()	Смена игрока
check_winner()	Проверка окончания игры
show_winner(...)	Отображение победителя
6. Технологии
Компонент	Использование
Python 3.10+	Язык разработки
PyQt6	Графический интерфейс
QPainter / QColor / QRectF	Отрисовка игрового поля и фигур
QMessageBox	Отображение диалоговых окон
QPointF	Координаты шашек
Qt Events	Обработка событий мыши
7. Дополнительные требования (по желанию)

Добавить подсветку возможных ходов.

Добавить счётчик побед.

Добавить возможность выбора цвета игрока.

Реализовать режим против ИИ (упрощённый).

Добавить анимацию перемещения шашек.

8. Критерии готовности

✅ Программа запускается без ошибок.
✅ Отображается корректная доска с шашками.
+- Работает выбор и перетаскивание шашек (ошибка, зачастую пешка не перетаскивается)
✅ Проверяются правила хода и взятия.
✅ Работает превращение в дамку.
✅ Реализована множественная рубка.
✅ Победитель определяется корректно.
✅ После окончания игры происходит автоматический перезапуск.
